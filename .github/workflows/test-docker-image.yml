name: Tests

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: madpeteguy/jenkins-docker-slave-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Collect docker meta
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          outputs: type=docker
          tags: ${{ env.DOCKER_IMAGE }}:test
          labels: ${{ steps.docker-metadata.outputs.labels }}
      - name: Save docker image
        run: docker save -o docker-image.tar ${{ env.DOCKER_IMAGE }}:test
      - name: Upload docker-image.tar
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tar
          if-no-files-found: error
          retention-days: 1
  test-docker-image:
    name: Test docker image
    runs-on: ubuntu-latest
    needs: build-docker-image
    env:
      DOCKER_CONTAINER: jenkins-docker-agent-${{ github.run_id }}
      DOCKER_IMAGE: madpeteguy/jenkins-docker-slave-docker
    steps:
      - name: Download docker-image.tar
        uses: actions/download-artifact@v4
        with:
          name: docker-image
      - name: Load images
        run: docker load --input docker-image.tar
      - name: Start container
        run: docker run -d --rm --privileged --name ${{ env.DOCKER_CONTAINER }}  ${{ env.DOCKER_IMAGE }}:test
      - name: Test docker version
        run: docker exec ${{ env.DOCKER_CONTAINER }} docker --version
      - name: Test docker hello-world
        run: docker exec ${{ env.DOCKER_CONTAINER }} docker run hello-world
      - name: Stop container
        run: docker stop ${{ env.DOCKER_CONTAINER }}
  cleanup-artifacts:
    name: Cleanup artifacts
    runs-on: ubuntu-latest
    needs: [ build-docker-image, test-docker-image ]
    steps:
      - name: Cleanup docker-image.tar
        uses: geekyeggo/delete-artifact@v5
        with:
          name: docker-image